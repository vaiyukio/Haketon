<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>Haketon</title>

    <link rel="stylesheet" type="text/css" href="@Path['~/Content/leaflet.css']" />
    <link rel="stylesheet" type="text/css" href="@Path['~/Content/bootstrap.css']" />
    <link rel="stylesheet" type="text/css" href="@Path['~/Content/leaflet-search.css']" />
	<script src="@Path['~/Content/jquery.js']"></script>
	<script src="@Path['~/Content/leaflet.js']"></script>
	<script src="@Path['~/Content/leaflet-search.js']"></script>
	<script src="@Path['~/Content/leaflet.polylineDecorator.js']"></script>
</head>
<body>
	<div class="container-fluid">
	<div class="row">
		<div class="col-md-3">
			<div>
				@Partial['sunburst']
			</div>
			<table class="table table-condensed table-dashboard">
				<thead>
					<tr>
						<th>Tipe</th>
						<th>Komoditas</th>
						<th>Jumlah</th>
						<th>Harga</th>
					</tr>
				</thead>
				<tbody>
				</tbody>
			</table>
		</div>
		<div id="map" class="col-md-9" style="height: 100vh;"></div>
	</div>
	</div>

	<script>
		/***  little hack starts here ***/
		L.Map = L.Map.extend({
			openPopup: function(popup) {
				//        this.closePopup();  // just comment this
				this._popup = popup;

				return this.addLayer(popup).fire('popupopen', {
					popup: this._popup
				});
			}
		}); /***  end of hack ***/

		var map = L.map('map').setView([-3.60114, 118.16895], 5);

		L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6IjZjNmRjNzk3ZmE2MTcwOTEwMGY0MzU3YjUzOWFmNWZhIn0.Y8bhBaUMqFiPrDRW9hieoQ', {
			maxZoom: 18,
			attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, ' +
				'<a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
				'Imagery © <a href="http://mapbox.com">Mapbox</a>',
			id: 'mapbox.streets'
		}).addTo(map);

		var popup = L.popup();

		var o = window.o = {};
		o.Id = 1;
		o.Amount = 1000;
		o.Price = 5300;
		o.Latitude = -7.28891;
		o.OrderType = "Purchase";
		o.UserName = "Joko";
		o.CommodityName = "Beras";
		o.Longitude = 106.6684564948082;

        var popups = {}

        function addOrder(order){
            var p = L.popup();
            popups[order.Id] = p;
			var verb = order.OrderType == "Purchase" ? "Beli" : "Jual";
			p
				.setLatLng(L.latLng(order.Latitude, order.Longitude))
				.setContent(verb+" " + order.CommodityName +", "+ order.UserName +", " + order.Amount +" Kg, Rp. "+order.Price)
				.openOn(map);
			map.setView([order.Latitude, order.Longitude], 9);
			$(".table-dashboard tbody").prepend($("<tr><td>"+verb+"</td><td>"+order.CommodityName+"</td><td>"+order.Amount+"</td><td>"+order.Price+"</td></tr>"))
        }

		var lastId = 0;
		var allOrders = {};
		var pairs = [];

		function updateMatch(id1, id2){
			var  o1 = allOrders[id1];
			var  o2 = allOrders[id2];
			if(!o1 || !o2)
				return;

			var pId = o1.OrderType == "Purchase" ? id1 : id2;
			var oId = o1.OrderType == "Purchase" ? id2 : id1;
			var  p = allOrders[pId];
			var  o = allOrders[oId];

			for(var i = 0; i < pairs.length; i++)
			{
				var pair = pairs[i];
				if(pair[0] == pId && pair[1] == oId)
					return;
			}
			pairs.push([pId, oId]);

			var arrow = L.polyline([[p.Latitude, p.Longitude], [o.Latitude, o.Longitude]], {}).addTo(map);
			var arrowHead = L.polylineDecorator(arrow).addTo(map);
			var arrowOffset = 0;
			var anim = window.setInterval(function() {
				arrowHead.setPatterns([
					{offset: arrowOffset+'%', repeat: 0, symbol: L.Symbol.arrowHead({pixelSize: 15, polygon: false, pathOptions: {stroke: true}})}
				])
				if(++arrowOffset > 100)
					arrowOffset = 0;
			}, 100);
		}

		function update(){
			$.getJSON("/orders/"+lastId).success(function(orders){
				for(var i = 0; i < orders.length; i++)
				{
					var o = orders[i];
					allOrders[o.Id] = o;
				}
				for(var i = 0; i < orders.length; i++)
				{
					var o = orders[i];
					addOrder(o);
					if(o.fkMatchingOrderId)
						updateMatch(o.Id, o.fkMatchingOrderId);
					if(o.Id > lastId)
						lastId = o.Id;
				}
			}).always(function(){
				setTimeout(update, 1000);
			});
		}
		setTimeout(update, 0);


	</script>
</body>
</html>
